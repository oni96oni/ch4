MyBatis로 DAO작성하기
    1.BoardDao의 작성
        1.DB테이블 생성

        2.Mapper XML & DTO 작성
            CRUD하기 위한 SQL문들을 XML로 작성 객체의 타입이 DTO
            parameterType이 input, resultType이 output이다.
        3.DAO인터페이스 작성
            2번에서 바로 4번 만들고 extract interface하는 경우도 있음
        4.DAO인터페이스 구현 & 테스트
            구현할때는 sql세션이 가지고있는 메서드 불러오면 된다.

        mybatis에서는 값을 지정하고 불러오는것을 자동으로 해주기 때문에 우린 단순히 sql session에 있는 메서드를 호출하기만 하면 된다.
    2.DTO란? Data Transfer Object

        계층간의 데이터를 주고 받기 위해 사용되는 객체
        게시판에 글을 쓸때는 DTO에 값을 채워서 테이블에 자료를 저장
        게시판에 글을 읽을때는 DTO로 값을 받아온다.

        Integer 쓰는 이유? null은 int로 받으면 변환에러발생, 하지만 wrapper클래스인  Integer는 에러는 발생하지 않는다.

        Spring MVC에서 하나의 소스에 있던걸 분리하니까 model이 필요해짐 데이터전달을 위해서
        Controller에서 작업한 것을 모델에 담고 모델에서 뷰로넘겨주어서 출력

        요청 -> @Controller -> @Servicce -> @Repository -> DB

        @Controller
            요청과 응답을 처리
            데이터 유효성 검증
            실행 흐름을 제어
        @Service
            비지니스 로직 담당
            트랜잭션 처리
        @Repository
            순수 Data Access 기능
            CRUD 기능

        관심사, 역할, 계층 분리의 목적이 있다 DTO에는

        VO는 Value Object, 값객체, 변경되면 안되는 특성(immutable)을 가지고 있다.

        예외처리
            @Repository에서 에러가 발생했다면
            1.Service에서 처리
            2.Controller에서 처리
            3.둘 다에서 처리(예외 되던지기)

    3.#{}와 ${}의 차이
        #은 PreparedStatement 값에대해서만 ? 를 사용 할 수 있다. varchar면 따옴표 자동으로 붙여준다. 대신 SQL Injection같은 공격을 모두 막아준다.
        $는 일반 Statement, 여기는 따옴표를 직접 붙여주어야 한다. 제약이 적어서 유연한편, 내부적으로 사용! 해킹의 위험이 있기 때문에

    4.XML의 특수 문자 처리
        XML내의 특수문자(<,>,&,..)는 &lt; &gt;로 변환 필요
        또는 특수문자가 포함된 쿼리를 <![CDATA[와 ]]>로 감싼다. 이 안에서는 XML TAG가 없다라는 뜼! 전부다 문자 데이터라는 뜻이다 (Character data)


