MyBatis로 DAO작성하기
    1.BoardDao의 작성
        1.DB테이블 생성

        2.Mapper XML & DTO 작성
            CRUD하기 위한 SQL문들을 XML로 작성 객체의 타입이 DTO
            parameterType이 input, resultType이 output이다.
        3.DAO인터페이스 작성
            2번에서 바로 4번 만들고 extract interface하는 경우도 있음
        4.DAO인터페이스 구현 & 테스트
            구현할때는 sqlsession이 가지고있는 메서드 불러오면 된다.

        mybatis에서는 값을 지정하고 불러오는것을 자동으로 해주기 때문에 우린 단순히 sql session에 있는 메서드를 호출하기만 하면 된다.
        mapper에 있는 sql문의 결과에 따라서 session의 메서드를 정하고, parameterType에 따라서 입력값을 설정해준다.

    2.DTO란? Data Transfer Object

        계층간의 데이터를 주고 받기 위해 사용되는 객체
        게시판에 글을 쓸때는 DTO에 값을 채워서 테이블에 자료를 저장
        게시판에 글을 읽을때는 DTO로 값을 받아온다.

        게시물 번호 타입을 Integer 쓰는 이유? 사용자가 입력한 값을 받아올때 쓰는것이라서 이 값이 잘못 들어오면은
        타입이 int일때 null이 들어오면 변환에러발생, null을 int로 바꿀 수 없으니까, 하지만 wrapper클래스인 Integer는 에러는 발생하지 않는다.
        변환과 검증에서 배웠다 싶이 사용자가 요청한 값을 변환과 검증을 통해서 받게 되어있는데 요청한 값을 저장할 타입이 int면 변환에러가 발생할 수 있다.

        Spring MVC에서 하나의 소스에 있던걸 분리하니까 model이 필요해짐 ★데이터전달을 위해서
        Controller에서 작업한 것을 모델에 담고 모델에서 뷰로넘겨주어서 출력

        우리가 내부적으로 3계층으로 나누었다.
        요청 -> @Controller -> @Servicce -> @Repository -> DB
        각 계층간의 ★데이터를 전달하기 위해서 사용하는것이 DTO이다.

        @Controller
            요청과 응답을 처리
            데이터 유효성 검증
            실행 흐름을 제어
        @Service
            비지니스 로직 담당
            트랜잭션 처리
        @Repository
            순수 Data Access 기능
            CRUD 기능

        DTO에는 관심사, 역할, 계층 분리의 목적이 있다

        VO는 Value Object, 값객체라는 뜻이다. 변경되면 안되는 특성(immutable)을 가지고 있다.

        예외처리
            @Repository에서 에러가 발생했다면
            1.Service에서 처리
            2.Controller에서 처리
            3.둘 다에서 처리(예외 되던지기) 호출한 메서드에 예외가 발생했었다는것을 알리기 위해서 호출한메서드, 호출된 메서드 모두에서 예외를 처리하는것

    실습.
        테스트를 실습하는중에 DAO에서 에러가 발생했는데
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/> 를 설정해야 DAO에서 실행이 가능하던데 무슨역할을 하는것일까??

    3.#{}와 ${}의 차이
        #은 PreparedStatement! 값에대해서만 ? 를 사용 할 수 있다. varchar면 따옴표 자동으로 붙여준다. 대신 SQL Injection같은 공격을 모두 막아준다.
        $는 Statement! 여기는 홑따옴표를 직접 붙여주어야 한다. 제약이 적어서 유연한편(테이블 네임같은것도 대신해서 사용가능), 내부적으로 사용! 동적으로 구성해야할때 사용
            외부에서 입력받는값은 사용X, 해킹의 위험이 있기 때문에

    4.XML의 특수 문자 처리
        XML내의 특수문자(<,>,&,..)는 &lt; &gt;로 변환 필요
        또는 특수문자가 포함된 쿼리를 <![CDATA[와 ]]>로 감싼다. 이 안에서는 XML TAG가 없다라는 뜼! 전부다 문자 데이터라는 뜻이다 (Character data)


